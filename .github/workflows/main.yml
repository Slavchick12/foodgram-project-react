name: Django-app workflow
on: [push]
jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: | 
        cd backend/
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r requirements.txt 
    - name: Test with flake8
      run: |
        isort .
        python -m flake8
  build_and_push_to_docker_hub:
      if: github.ref == 'refs/heads/master'
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-latest
      needs: tests
      steps:
        - name: Check out the repo
          uses: actions/checkout@v2
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1 
        - name: Login to Docker 
          uses: docker/login-action@v1 
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Push to Docker Hub backend
          uses: docker/build-push-action@v2 
          with:
            context: ./backend/
            push: true
            tags: slavc/foodgram_backend:latest
        - name: Push to Docker Hub Frontend
          uses: docker/build-push-action@v2
          with:
            push: true
            context: ./frontend/
            tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest
  deploy:
      if: github.ref == 'refs/heads/master'
      runs-on: ubuntu-latest
      needs: build_and_push_to_docker_hub
      steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd foodgram-project-react/
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_fronted:latest
            cd infra/
            sudo docker-compose stop
            sudo docker-compose rm backend
            sudo docker-compose up -d --build